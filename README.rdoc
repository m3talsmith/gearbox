= Gearbox

A state machine that's made from ground up to automate state transitions.


== Examples:

  class F1 < Car
    include Mongoid::Document
    include Gearbox

    attr_accessor :clutch_pressed, :brake_pressed, :shifted_up, :shifted_down
    
    gearbox start_state: :parked do
      state :parked, callback: ->{
        def callback
          transition to: :ignite
        end
      }
      
      state :ignite, if: :safe_to_ignite?, callback: ->{
        def callback
          transition to: :idling
        end
      }
      
      state :idling, if: :is_running?, callback: ->{
        def callback
          transition to: :first_gear if: :clutch_is_down?
        end
      }
      
      state [:first, :second, :third, :fourth], if: :is_running?, callback: ->{
        def callback
          transition to: next_state,     if: :shifted_up?
          transition to: previous_state, if: :shifted_down?
        end
      }
      
      state :park, callback: ->{
        def callback
          transition to: :parking
        end
      }
      
      state :parking, callback: ->{
        def callback
          brake
          clutch
          turn_off
          final_state :parked
        end
      }
    end
    
    def brake
      # press down brake
    end
    
    def clutch
      # press down clutch
    end

    def shift_up
      self.shifted_up = true
    end

    def shift_down
      self.shifted_down = true
    end
    
    def turn_off
      # turn of the key
    end
    
    def turn_on
      brake
      clutch
      ignite
    end
  end
